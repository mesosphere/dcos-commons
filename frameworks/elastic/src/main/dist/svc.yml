name: {{FRAMEWORK_NAME}}
scheduler:
  principal: {{FRAMEWORK_PRINCIPAL}}
  user: {{FRAMEWORK_USER}}
pods:
  master:
    count: 3
    {{#ENABLE_VIRTUAL_NETWORK}}
    networks:
      {{VIRTUAL_NETWORK_NAME}}:
        labels: {{VIRTUAL_NETWORK_PLUGIN_LABELS}}
    {{/ENABLE_VIRTUAL_NETWORK}}
    uris:
      - {{BOOTSTRAP_URI}}
      - {{ELASTICSEARCH_JAVA_URI}}
      - {{ELASTICSEARCH_URI}}
      - {{DIAGNOSTICS_URI}}
      - {{STATSD_URI}}
    rlimits:
      RLIMIT_NOFILE:
        soft: {{MASTER_NODE_RLIMIT_NOFILE_SOFT}}
        hard: {{MASTER_NODE_RLIMIT_NOFILE_HARD}}
    placement: '{{{MASTER_NODE_PLACEMENT}}}'
    tasks:
      node:
        goal: RUNNING
        cpus: {{MASTER_NODE_CPUS}}
        memory: {{MASTER_NODE_MEM}}
        ports:
          master-http:
            port: 0
            env-key: PORT_HTTP
            advertise: true
            vip:
              prefix: master
              port: 9200
          master-transport:
            port: {{MASTER_NODE_TRANSPORT_PORT}}
            env-key: PORT_TRANSPORT
            advertise: true
            vip:
              prefix: master
              port: 9300
        volume:
          path: "container-path"
          type: {{MASTER_NODE_DISK_TYPE}}
          size: {{MASTER_NODE_DISK}}
        cmd: |
          set -ex

          export JAVA_HOME=$(ls -d $MESOS_SANDBOX/jdk*/)

          mkdir scripts

          ./bootstrap

          chmod -R +x scripts

          ./scripts/java-dns-ttl.sh
          ./scripts/install-plugins.sh
          ./scripts/setup-java-policy.sh

          exec ./elasticsearch-{{ELASTIC_VERSION}}/bin/elasticsearch
        env:
          NODE_HEAP_MB: {{MASTER_NODE_HEAP_MB}} 
          DATA_NODE_COUNT: {{DATA_NODE_COUNT}}
          MASTER_NODE_TRANSPORT_PORT: {{MASTER_NODE_TRANSPORT_PORT}}
          MASTER_ENABLED: true
          DATA_ENABLED: false
          INGEST_ENABLED: false
          ELASTIC_VERSION: {{ELASTIC_VERSION}}
          ELASTIC_STATSD_VERSION: {{ELASTIC_STATSD_VERSION}}
        configs:
          jvm.options:
            template: jvm.options
            dest: elasticsearch-{{ELASTIC_VERSION}}/config/jvm.options
          elasticsearch.yml:
            template: elasticsearch.yml
            dest: elasticsearch-{{ELASTIC_VERSION}}/config/elasticsearch.yml
          install-plugins.sh:
            template: install-plugins.sh
            dest: scripts/install-plugins.sh
          java-dns-ttl.sh:
            template: java-dns-ttl.sh
            dest: scripts/java-dns-ttl.sh
          setup-java-policy.sh:
            template: setup-java-policy.sh
            dest: scripts/setup-java-policy.sh
        readiness-check:
          cmd: "curl -k -I -s -f -u {{ELASTICSEARCH_HEALTH_USER}}:{{ELASTICSEARCH_HEALTH_USER_PASSWORD}} {{ELASTICSEARCH_HEALTH_PROTOCOL}}://$TASK_NAME.$FRAMEWORK_HOST:$PORT_HTTP"
          interval: {{MASTER_NODE_READINESS_CHECK_INTERVAL}}
          delay: {{MASTER_NODE_READINESS_CHECK_DELAY}}
          timeout: {{MASTER_NODE_READINESS_CHECK_TIMEOUT}}
        {{#TASKCFG_ALL_SECURITY_TRANSPORT_ENCRYPTION_ENABLED}}
        transport-encryption:
          - name: node
            type: TLS
        {{/TASKCFG_ALL_SECURITY_TRANSPORT_ENCRYPTION_ENABLED}}
  data:
    count: {{DATA_NODE_COUNT}}
    {{#ENABLE_VIRTUAL_NETWORK}}
    networks:
      {{VIRTUAL_NETWORK_NAME}}:
        labels: {{VIRTUAL_NETWORK_PLUGIN_LABELS}}
    {{/ENABLE_VIRTUAL_NETWORK}}
    uris:
      - {{BOOTSTRAP_URI}}
      - {{ELASTICSEARCH_JAVA_URI}}
      - {{ELASTICSEARCH_URI}}
      - {{DIAGNOSTICS_URI}}
      - {{STATSD_URI}}
    rlimits:
      RLIMIT_NOFILE:
        soft: {{DATA_NODE_RLIMIT_NOFILE_SOFT}}
        hard: {{DATA_NODE_RLIMIT_NOFILE_HARD}}
    placement: '{{{DATA_NODE_PLACEMENT}}}'
    tasks:
      node:
        goal: RUNNING
        cpus: {{DATA_NODE_CPUS}}
        memory: {{DATA_NODE_MEM}}
        ports:
          data-http:
            port: 0
            env-key: PORT_HTTP
            advertise: true
            vip:
              prefix: data
              port: 9200
          data-transport:
            port: 0
            env-key: PORT_TRANSPORT
            advertise: true
            vip:
              prefix: data
              port: 9300
        volume:
          path: "container-path"
          type: {{DATA_NODE_DISK_TYPE}}
          size: {{DATA_NODE_DISK}}
        cmd: |
          set -ex

          export JAVA_HOME=$(ls -d $MESOS_SANDBOX/jdk*/)

          mkdir scripts

          ./bootstrap

          chmod -R +x scripts

          ./scripts/java-dns-ttl.sh
          ./scripts/install-plugins.sh
          ./scripts/setup-java-policy.sh

          exec ./elasticsearch-{{ELASTIC_VERSION}}/bin/elasticsearch
        env:
          NODE_HEAP_MB: {{DATA_NODE_HEAP_MB}} 
          MASTER_NODE_TRANSPORT_PORT: {{MASTER_NODE_TRANSPORT_PORT}}
          DATA_ENABLED: true
          INGEST_ENABLED: false
          ELASTIC_VERSION: {{ELASTIC_VERSION}}
          ELASTIC_STATSD_VERSION: {{ELASTIC_STATSD_VERSION}}
        configs:
          jvm.options:
            template: jvm.options
            dest: elasticsearch-{{ELASTIC_VERSION}}/config/jvm.options
          elasticsearch.yml:
            template: elasticsearch.yml
            dest: elasticsearch-{{ELASTIC_VERSION}}/config/elasticsearch.yml
          install-plugins.sh:
            template: install-plugins.sh
            dest: scripts/install-plugins.sh
          java-dns-ttl.sh:
            template: java-dns-ttl.sh
            dest: scripts/java-dns-ttl.sh
          setup-java-policy.sh:
            template: setup-java-policy.sh
            dest: scripts/setup-java-policy.sh
        readiness-check:
          cmd: "curl -k -I -s -f -u {{ELASTICSEARCH_HEALTH_USER}}:{{ELASTICSEARCH_HEALTH_USER_PASSWORD}} {{ELASTICSEARCH_HEALTH_PROTOCOL}}://$TASK_NAME.$FRAMEWORK_HOST:$PORT_HTTP"
          interval: {{DATA_NODE_READINESS_CHECK_INTERVAL}}
          delay: {{DATA_NODE_READINESS_CHECK_DELAY}}
          timeout: {{DATA_NODE_READINESS_CHECK_TIMEOUT}}
        {{#TASKCFG_ALL_SECURITY_TRANSPORT_ENCRYPTION_ENABLED}}
        transport-encryption:
          - name: node
            type: TLS
        {{/TASKCFG_ALL_SECURITY_TRANSPORT_ENCRYPTION_ENABLED}}
  ingest:
    count: {{INGEST_NODE_COUNT}}
    {{#ENABLE_VIRTUAL_NETWORK}}
    networks:
      {{VIRTUAL_NETWORK_NAME}}:
        labels: {{VIRTUAL_NETWORK_PLUGIN_LABELS}}
    {{/ENABLE_VIRTUAL_NETWORK}}
    uris:
      - {{BOOTSTRAP_URI}}
      - {{ELASTICSEARCH_JAVA_URI}}
      - {{ELASTICSEARCH_URI}}
      - {{DIAGNOSTICS_URI}}
      - {{STATSD_URI}}
    rlimits:
      RLIMIT_NOFILE:
        soft: {{INGEST_NODE_RLIMIT_NOFILE_SOFT}}
        hard: {{INGEST_NODE_RLIMIT_NOFILE_HARD}}
    placement: '{{{INGEST_NODE_PLACEMENT}}}'
    tasks:
      node:
        goal: RUNNING
        cpus: {{INGEST_NODE_CPUS}}
        memory: {{INGEST_NODE_MEM}}
        ports:
          ingest-http:
            port: 0
            env-key: PORT_HTTP
            advertise: true
            vip:
              prefix: ingest
              port: 9200
          ingest-transport:
            port: 0
            env-key: PORT_TRANSPORT
            advertise: true
            vip:
              prefix: ingest
              port: 9300
        volume:
          path: "container-path"
          type: {{INGEST_NODE_DISK_TYPE}}
          size: {{INGEST_NODE_DISK}}
        cmd: |
          set -ex

          export JAVA_HOME=$(ls -d $MESOS_SANDBOX/jdk*/)

          mkdir scripts

          ./bootstrap

          chmod -R +x scripts

          ./scripts/java-dns-ttl.sh
          ./scripts/install-plugins.sh
          ./scripts/setup-java-policy.sh

          exec ./elasticsearch-{{ELASTIC_VERSION}}/bin/elasticsearch
        env:
          NODE_HEAP_MB: {{INGEST_NODE_HEAP_MB}} 
          MASTER_NODE_TRANSPORT_PORT: {{MASTER_NODE_TRANSPORT_PORT}}
          DATA_ENABLED: false
          INGEST_ENABLED: true
          ELASTIC_VERSION: {{ELASTIC_VERSION}}
          ELASTIC_STATSD_VERSION: {{ELASTIC_STATSD_VERSION}}
        configs:
          jvm.options:
            template: jvm.options
            dest: elasticsearch-{{ELASTIC_VERSION}}/config/jvm.options
          elasticsearch.yml:
            template: elasticsearch.yml
            dest: elasticsearch-{{ELASTIC_VERSION}}/config/elasticsearch.yml
          install-plugins.sh:
            template: install-plugins.sh
            dest: scripts/install-plugins.sh
          java-dns-ttl.sh:
            template: java-dns-ttl.sh
            dest: scripts/java-dns-ttl.sh
          setup-java-policy.sh:
            template: setup-java-policy.sh
            dest: scripts/setup-java-policy.sh
        readiness-check:
          cmd: "curl -k -I -s -f -u {{ELASTICSEARCH_HEALTH_USER}}:{{ELASTICSEARCH_HEALTH_USER_PASSWORD}} {{ELASTICSEARCH_HEALTH_PROTOCOL}}://$TASK_NAME.$FRAMEWORK_HOST:$PORT_HTTP"
          interval: {{INGEST_NODE_READINESS_CHECK_INTERVAL}}
          delay: {{INGEST_NODE_READINESS_CHECK_DELAY}}
          timeout: {{INGEST_NODE_READINESS_CHECK_TIMEOUT}}
        {{#TASKCFG_ALL_SECURITY_TRANSPORT_ENCRYPTION_ENABLED}}
        transport-encryption:
          - name: node
            type: TLS
        {{/TASKCFG_ALL_SECURITY_TRANSPORT_ENCRYPTION_ENABLED}}
  coordinator:
    count: {{COORDINATOR_NODE_COUNT}}
    {{#ENABLE_VIRTUAL_NETWORK}}
    networks:
      {{VIRTUAL_NETWORK_NAME}}:
        labels: {{VIRTUAL_NETWORK_PLUGIN_LABELS}}
    {{/ENABLE_VIRTUAL_NETWORK}}
    uris:
      - {{BOOTSTRAP_URI}}
      - {{ELASTICSEARCH_JAVA_URI}}
      - {{ELASTICSEARCH_URI}}
      - {{DIAGNOSTICS_URI}}
      - {{STATSD_URI}}
    rlimits:
      RLIMIT_NOFILE:
        soft: {{COORDINATOR_NODE_RLIMIT_NOFILE_SOFT}}
        hard: {{COORDINATOR_NODE_RLIMIT_NOFILE_HARD}}
    placement: '{{{COORDINATOR_NODE_PLACEMENT}}}'
    tasks:
      node:
        goal: RUNNING
        cpus: {{COORDINATOR_NODE_CPUS}}
        memory: {{COORDINATOR_NODE_MEM}}
        ports:
          coordinator-http:
            port: 0
            env-key: PORT_HTTP
            advertise: true
            vip:
              prefix: coordinator
              port: 9200
          coordinator-transport:
            port: 0
            env-key: PORT_TRANSPORT
            advertise: true
            vip:
              prefix: coordinator
              port: 9300
        volume:
          path: "container-path"
          type: {{COORDINATOR_NODE_DISK_TYPE}}
          size: {{COORDINATOR_NODE_DISK}}
        cmd: |
          set -ex

          export JAVA_HOME=$(ls -d $MESOS_SANDBOX/jdk*/)

          mkdir scripts

          ./bootstrap

          chmod -R +x scripts

          ./scripts/java-dns-ttl.sh
          ./scripts/install-plugins.sh
          ./scripts/setup-java-policy.sh

          exec ./elasticsearch-{{ELASTIC_VERSION}}/bin/elasticsearch
        env:
          NODE_HEAP_MB: {{COORDINATOR_NODE_HEAP_MB}} 
          MASTER_NODE_TRANSPORT_PORT: {{MASTER_NODE_TRANSPORT_PORT}}
          DATA_ENABLED: false
          INGEST_ENABLED: false
          ELASTIC_VERSION: {{ELASTIC_VERSION}}
          ELASTIC_STATSD_VERSION: {{ELASTIC_STATSD_VERSION}}
        configs:
          jvm.options:
            template: jvm.options
            dest: elasticsearch-{{ELASTIC_VERSION}}/config/jvm.options
          elasticsearch.yml:
            template: elasticsearch.yml
            dest: elasticsearch-{{ELASTIC_VERSION}}/config/elasticsearch.yml
          install-plugins.sh:
            template: install-plugins.sh
            dest: scripts/install-plugins.sh
          java-dns-ttl.sh:
            template: java-dns-ttl.sh
            dest: scripts/java-dns-ttl.sh
          setup-java-policy.sh:
            template: setup-java-policy.sh
            dest: scripts/setup-java-policy.sh
        readiness-check:
          cmd: "curl -k -I -s -f -u {{ELASTICSEARCH_HEALTH_USER}}:{{ELASTICSEARCH_HEALTH_USER_PASSWORD}} {{ELASTICSEARCH_HEALTH_PROTOCOL}}://$TASK_NAME.$FRAMEWORK_HOST:$PORT_HTTP"
          interval: {{COORDINATOR_NODE_READINESS_CHECK_INTERVAL}}
          delay: {{COORDINATOR_NODE_READINESS_CHECK_DELAY}}
          timeout: {{COORDINATOR_NODE_READINESS_CHECK_TIMEOUT}}
        {{#TASKCFG_ALL_SECURITY_TRANSPORT_ENCRYPTION_ENABLED}}
        transport-encryption:
          - name: node
            type: TLS
        {{/TASKCFG_ALL_SECURITY_TRANSPORT_ENCRYPTION_ENABLED}}
plans:
  deploy:
    strategy: {{DEPLOY_STRATEGY}}
    phases:
      master-deploy:
        strategy: {{DEPLOY_STRATEGY}}
        pod: master
      data-deploy:
        strategy: {{DEPLOY_STRATEGY}}
        pod: data
      ingest-deploy:
        strategy: {{DEPLOY_STRATEGY}}
        pod: ingest
      coordinator-deploy:
        strategy: {{DEPLOY_STRATEGY}}
        pod: coordinator
  update:
    strategy: {{UPDATE_STRATEGY}}
    phases:
      master-update:
        strategy: {{UPDATE_STRATEGY}}
        pod: master
      data-update:
        strategy: {{UPDATE_STRATEGY}}
        pod: data
      ingest-update:
        strategy: {{UPDATE_STRATEGY}}
        pod: ingest
      coordinator-update:
        strategy: {{UPDATE_STRATEGY}}
        pod: coordinator
