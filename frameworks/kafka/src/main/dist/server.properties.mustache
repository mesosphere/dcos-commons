external.kafka.statsd.port={{KAFKA_STATSD_PORT}}
external.kafka.statsd.host={{KAFKA_STATSD_HOSTS}}
external.kafka.statsd.reporter.enabled=true
external.kafka.statsd.tag.enabled=true
external.kafka.statsd.metrics.exclude_regex=
#
#kafka.metrics.reporters=com.airbnb.kafka.KafkaStatsdMetricsReporter
#
advertised.host.name={{LIBPROCESS_IP}}
#
zookeeper.connection.timeout.ms=6000
#
port={{PORT_KAFKA_BROKER_PORT}}
broker.id={{POD_INSTANCE_INDEX}}
#
zookeeper.connect={{KAFKA_ZOOKEEPER_URI}}
#
log.dirs={{KAFKA_BROKER_DISK_PATH}}/broker-{{POD_INSTANCE_INDEX}}
#
#listeners=PLAINTEXT://:9285
#
reserved.broker.max.id={{KAFKA_RESERVED_BROKER_MAX_ID}}
offsets.topic.compression.codec={{KAFKA_OFFSETS_TOPIC_COMPRESSION_CODEC}}
replica.fetch.min.bytes={{KAFKA_REPLICA_FETCH_MIN_BYTES}}
controlled.shutdown.retry.backoff.ms={{KAFKA_CONTROLLED_SHUTDOWN_RETRY_BACKOFF_MS}}
log.flush.offset.checkpoint.interval.ms={{KAFKA_LOG_FLUSH_OFFSET_CHECKPOINT_INTERVAL_MS}}
offsets.topic.num.partitions={{KAFKA_OFFSETS_TOPIC_NUM_PARTITIONS}}
max.connections.per.ip.overrides={{KAFKA_MAX_CONNECTIONS_PER_IP_OVERRIDES}}
leader.imbalance.check.interval.seconds={{KAFKA_LEADER_IMBALANCE_CHECK_INTERVAL_SECONDS}}
inter.broker.protocol.version={{KAFKA_INTER_BROKER_PROTOCOL_VERSION}}
log.message.format.version={{KAFKA_LOG_MESSAGE_FORMAT_VERSION}}
replica.socket.timeout.ms={{KAFKA_REPLICA_SOCKET_TIMEOUT_MS}}
group.max.session.timeout.ms={{KAFKA_GROUP_MAX_SESSION_TIMEOUT_MS}}
metrics.num.samples={{KAFKA_METRICS_NUM_SAMPLES}}
log.cleaner.delete.retention.ms={{KAFKA_LOG_CLEANER_DELETE_RETENTION_MS}}
log.preallocate={{KAFKA_LOG_PREALLOCATE}}
replica.socket.receive.buffer.bytes={{KAFKA_REPLICA_SOCKET_RECEIVE_BUFFER_BYTES}}
offset.metadata.max.bytes={{KAFKA_OFFSET_METADATA_MAX_BYTES}}
message.max.bytes={{KAFKA_MESSAGE_MAX_BYTES}}
log.roll.jitter.hours={{KAFKA_LOG_ROLL_JITTER_HOURS}}
offsets.retention.check.interval.ms={{KAFKA_OFFSETS_RETENTION_CHECK_INTERVAL_MS}}
fetch.purgatory.purge.interval.requests={{KAFKA_FETCH_PURGATORY_PURGE_INTERVAL_REQUESTS}}
log.retention.check.interval.ms={{KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS}}
log.index.interval.bytes={{KAFKA_LOG_INDEX_INTERVAL_BYTES}}
num.network.threads={{KAFKA_NUM_NETWORK_THREADS}}
offsets.commit.timeout.ms={{KAFKA_OFFSETS_COMMIT_TIMEOUT_MS}}
offsets.topic.replication.factor={{KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR}}
replica.fetch.max.bytes={{KAFKA_REPLICA_FETCH_MAX_BYTES}}
connections.max.idle.ms={{KAFKA_CONNECTIONS_MAX_IDLE_MS}}
socket.request.max.bytes={{KAFKA_SOCKET_REQUEST_MAX_BYTES}}
metrics.sample.window.ms={{KAFKA_METRICS_SAMPLE_WINDOW_MS}}
num.partitions={{KAFKA_NUM_PARTITIONS}}
replica.lag.time.max.ms={{KAFKA_REPLICA_LAG_TIME_MAX_MS}}
log.cleaner.io.buffer.load.factor={{KAFKA_LOG_CLEANER_IO_BUFFER_LOAD_FACTOR}}
offsets.commit.required.acks={{KAFKA_OFFSETS_COMMIT_REQUIRED_ACKS}}
auto.create.topics.enable={{KAFKA_AUTO_CREATE_TOPICS_ENABLE}}
unclean.leader.election.enable={{KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE}}
replica.fetch.backoff.ms={{KAFKA_REPLICA_FETCH_BACKOFF_MS}}
log.roll.hours={{KAFKA_LOG_ROLL_HOURS}}
zookeeper.session.timeout.ms={{KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS}}
producer.purgatory.purge.interval.requests={{KAFKA_PRODUCER_PURGATORY_PURGE_INTERVAL_REQUESTS}}
group.min.session.timeout.ms={{KAFKA_GROUP_MIN_SESSION_TIMEOUT_MS}}
log.index.size.max.bytes={{KAFKA_LOG_INDEX_SIZE_MAX_BYTES}}
num.replica.fetchers={{KAFKA_NUM_REPLICA_FETCHERS}}
min.insync.replicas={{KAFKA_MIN_INSYNC_REPLICAS}}
log.flush.interval.messages={{KAFKA_LOG_FLUSH_INTERVAL_MESSAGES}}
socket.send.buffer.bytes={{KAFKA_SOCKET_SEND_BUFFER_BYTES}}
auto.leader.rebalance.enable={{KAFKA_AUTO_LEADER_REBALANCE_ENABLE}}
log.cleaner.enable={{KAFKA_LOG_CLEANER_ENABLE}}
queued.max.requests={{KAFKA_QUEUED_MAX_REQUESTS}}
controlled.shutdown.max.retries={{KAFKA_CONTROLLED_SHUTDOWN_MAX_RETRIES}}
offsets.load.buffer.size={{KAFKA_OFFSETS_LOAD_BUFFER_SIZE}}
log.retention.bytes={{KAFKA_LOG_RETENTION_BYTES}}
num.io.threads={{KAFKA_NUM_IO_THREADS}}
controller.socket.timeout.ms={{KAFKA_CONTROLLER_SOCKET_TIMEOUT_MS}}
log.retention.hours={{KAFKA_LOG_RETENTION_HOURS}}
log.flush.scheduler.interval.ms={{KAFKA_LOG_FLUSH_SCHEDULER_INTERVAL_MS}}
offsets.retention.minutes={{KAFKA_OFFSETS_RETENTION_MINUTES}}
quota.window.size.seconds={{KAFKA_QUOTA_WINDOW_SIZE_SECONDS}}
log.segment.bytes={{KAFKA_LOG_SEGMENT_BYTES}}
leader.imbalance.per.broker.percentage={{KAFKA_LEADER_IMBALANCE_PER_BROKER_PERCENTAGE}}
max.connections.per.ip={{KAFKA_MAX_CONNECTIONS_PER_IP}}
log.cleaner.dedupe.buffer.size={{KAFKA_LOG_CLEANER_DEDUPE_BUFFER_SIZE}}
log.cleaner.min.cleanable.ratio={{KAFKA_LOG_CLEANER_MIN_CLEANABLE_RATIO}}
zookeeper.sync.time.ms={{KAFKA_ZOOKEEPER_SYNC_TIME_MS}}
quota.consumer.default={{KAFKA_QUOTA_CONSUMER_DEFAULT}}
delete.topic.enable={{KAFKA_DELETE_TOPIC_ENABLE}}
log.cleanup.policy={{KAFKA_LOG_CLEANUP_POLICY}}
default.replication.factor={{KAFKA_DEFAULT_REPLICATION_FACTOR}}
num.recovery.threads.per.data.dir={{KAFKA_NUM_RECOVERY_THREADS_PER_DATA_DIR}}
log.cleaner.io.buffer.size={{KAFKA_LOG_CLEANER_IO_BUFFER_SIZE}}
background.threads={{KAFKA_BACKGROUND_THREADS}}
log.segment.delete.delay.ms={{KAFKA_LOG_SEGMENT_DELETE_DELAY_MS}}
quota.window.num={{KAFKA_QUOTA_WINDOW_NUM}}
request.timeout.ms={{KAFKA_REQUEST_TIMEOUT_MS}}
log.cleaner.threads={{KAFKA_LOG_CLEANER_THREADS}}
quota.producer.default={{KAFKA_QUOTA_PRODUCER_DEFAULT}}
log.cleaner.backoff.ms={{KAFKA_LOG_CLEANER_BACKOFF_MS}}
controlled.shutdown.enable={{KAFKA_CONTROLLED_SHUTDOWN_ENABLE}}
socket.receive.buffer.bytes={{KAFKA_SOCKET_RECEIVE_BUFFER_BYTES}}
replica.fetch.wait.max.ms={{KAFKA_REPLICA_FETCH_WAIT_MAX_MS}}
replica.high.watermark.checkpoint.interval.ms={{KAFKA_REPLICA_HIGH_WATERMARK_CHECKPOINT_INTERVAL_MS}}
offsets.topic.segment.bytes={{KAFKA_OFFSETS_TOPIC_SEGMENT_BYTES}}
log.cleaner.io.max.bytes.per.second={{KAFKA_LOG_CLEANER_IO_MAX_BYTES_PER_SECOND}}
compression.type={{KAFKA_COMPRESSION_TYPE}}
