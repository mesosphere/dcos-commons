ext {
    hamcrestVer = "1.3"
    junitVer = "4.12"
    systemRulesVer = "1.16.0"
    mockitoVer = "1.9.5"
    findbugsAnnotationsVer = "3.0.1u2"
    awaitilityVer = "2.0.0"
}

dependencies {
    compile project(":common")
    compile "com.googlecode.protobuf-java-format:protobuf-java-format:1.4"
    compile "com.google.code.findbugs:annotations:${findbugsAnnotationsVer}"
    testCompile "org.hamcrest:hamcrest-all:${hamcrestVer}" // note: must be above junit
    testCompile "junit:junit:${junitVer}"
    testCompile "com.github.stefanbirkner:system-rules:${systemRulesVer}"
    testCompile "org.mockito:mockito-all:${mockitoVer}"
    testCompile "org.awaitility:awaitility:${awaitilityVer}"
}

apply plugin: 'java'
apply plugin: 'application'

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

publishing {
    repositories {
        maven {
            if(project.version.endsWith('-SNAPSHOT')) {
                url "s3://downloads.mesosphere.io/maven-snapshot/"
            } else {
                url "s3://downloads.mesosphere.io/maven/"
            }
            credentials(AwsCredentials) {
                accessKey System.env['AWS_ACCESS_KEY_ID']
                secretKey System.env['AWS_SECRET_ACCESS_KEY']
            }
        }
        publications {
            mavenJava(MavenPublication) {
                groupId project.group
                artifactId 'executor'
                version project.version

                from components.java

                artifact sourceJar {
                    classifier "sources"
                }
            }
        }
    }
}

distributions {
    main {
        baseName = 'executor'
    }
}

distZip {
    archiveName "executor.zip"
}

distTar {
    archiveName "executor.tar"
}

check.finalizedBy jacocoTestReport

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}

mainClassName = 'com.mesosphere.sdk.executor.Main'
