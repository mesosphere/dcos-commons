worker_processes  1;

error_log  ${MESOS_SANDBOX}/nginx/error.log debug;
pid        ${MESOS_SANDBOX}/nginx/nginx.pid;

events {
  worker_connections 1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  # Use dcos-net resolver address so that l4lb DNS names can be resolved.
  resolver 198.51.100.1 ipv6=off;

  fastcgi_temp_path     ${MESOS_SANDBOX}/nginx/fastcgi_temp;
  uwsgi_cache_path      ${MESOS_SANDBOX}/nginx/uwsgi_cache levels=1:2 use_temp_path=on keys_zone=uwsgi:10m;
  uwsgi_temp_path       ${MESOS_SANDBOX}/nginx/uwsgi_temp;
  scgi_cache_path       ${MESOS_SANDBOX}/nginx/scgi_cache levels=1:2 use_temp_path=on keys_zone=scgi:10m;
  scgi_temp_path        ${MESOS_SANDBOX}/nginx/scgi_temp;
  client_body_temp_path ${MESOS_SANDBOX}/nginx/client_temp;
  proxy_cache_path      ${MESOS_SANDBOX}/nginx/proxy_cache levels=1:2 use_temp_path=on keys_zone=proxy:10m;
  proxy_temp_path       ${MESOS_SANDBOX}/nginx/proxy_temp;

  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';

  access_log ${MESOS_SANDBOX}/nginx/access.log main;

  rewrite_log on;

  sendfile off;

  keepalive_timeout 65;

  server {
    listen ${PORT_PROXY};

    # The Kibana web server will incorrectly do redirects to an invalid path
    # with a doubled "/service/${FRAMEWORK_NAME}" in some cases. This causes at
    # least a couple of different issues.
    #
    # The following location block fixes this.
    location /service/${FRAMEWORK_NAME}/service/${FRAMEWORK_NAME}/ {
      port_in_redirect off;
      rewrite ^/service/${FRAMEWORK_NAME}/(.*)$ /$1 permanent;
    }

    location /service/${FRAMEWORK_NAME}/ {
      proxy_set_header X-Real-IP "$remote_addr";
      proxy_set_header X-Forwarded-For "$proxy_add_x_forwarded_for";
      proxy_set_header Host "$http_host";

      # Admin Router adds an "Authorization" header to requests to its backends.
      # Kibana tries to interpret "Authorization" headers to authenticate
      # requests to it, but since the header here contains a DC/OS-related
      # token, Kibana will fail to process it and log a message like
      # "Unsupported authentication schema: token=...".
      #
      # Hence, we remove the "Authorization" header before it hits the Kibana
      # web server.
      #
      # For more details see DCOS-46801.
      proxy_set_header Authorization "";

      proxy_pass ${MARATHON_APP_LABEL_DCOS_SERVICE_SCHEME}://0.0.0.0:${PORT_KIBANA};
    }
  }
}
