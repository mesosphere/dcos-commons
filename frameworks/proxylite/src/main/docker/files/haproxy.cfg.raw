global
  daemon
  log /dev/log local0
  spread-checks 5
  max-spread-checks 15000
  maxconn 50000
  tune.ssl.default-dh-param 2048
  ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:!aNULL:!MD5:!DSS
  ssl-default-bind-options no-sslv3 no-tlsv10 no-tls-tickets
  ssl-default-server-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:!aNULL:!MD5:!DSS
  ssl-default-server-options no-sslv3 no-tlsv10 no-tls-tickets
#  stats socket /var/run/haproxy/socket
#  server-state-file global
#  server-state-base /var/state/haproxy/
#  lua-load /dcos-l7lb/haproxy/lua/getpids.lua
#  lua-load /dcos-l7lb/haproxy/lua/getconfig.lua
#  lua-load /dcos-l7lb/haproxy/lua/getmaps.lua
#  lua-load /dcos-l7lb/haproxy/lua/signalmlb.lua

defaults
#  load-server-state-from-file global
  log               global
  retries                 100 # XXX Many retries
  backlog               10000
  maxconn               10000
  timeout connect          3s
  timeout client          30s
  timeout server          30s
  timeout tunnel        3600s
  timeout http-keep-alive  1s
  timeout http-request    15s
  timeout queue           30s
  timeout tarpit          60s
  option            dontlognull
  option            http-server-close
  option            redispatch

listen stats
  bind 0.0.0.0:9090
  balance
  mode http
  stats enable
  monitor-uri /_haproxy_health_check
#  acl getpid path /_haproxy_getpids
#  http-request use-service lua.getpids if getpid
#  acl getvhostmap path /_haproxy_getvhostmap
#  http-request use-service lua.getvhostmap if getvhostmap
#  acl getappmap path /_haproxy_getappmap
#  http-request use-service lua.getappmap if getappmap
#  acl getconfig path /_haproxy_getconfig
#  http-request use-service lua.getconfig if getconfig
#
#  acl signalmlbhup path /_mlb_signal/hup
#  http-request use-service lua.signalmlbhup if signalmlbhup
#  acl signalmlbusr1 path /_mlb_signal/usr1
#  http-request use-service lua.signalmlbusr1 if signalmlbusr1

#frontend marathon_http_in
#  bind *:80
#  mode http
#  use_backend %[req.hdr(host),lower,regsub(:.*$,,),map(/proxy-lite/domain2backend.map)]

#frontend marathon_http_appid_in
#  bind *:9091
#  mode http
#  use_backend %[req.hdr(x-marathon-app-id),lower,map(/marathon-lb/app2backend.map)]

#frontend marathon_https_in
#  bind *:443 ssl crt /etc/ssl/cert.pem
#  mode http
#  use_backend %[ssl_fc_sni,lower,map(/marathon-lb/domain2backend.map)]

#frontend myvhost_frontend
#    bind *:80
#    mode http
#    use_backend myvhost_backend
#
#backend myvhost_backend
#    mode http
#    balance roundrobin
#    option forwardfor
#    http-request set-header X-Forwarded-Port %[dst_port]
#    server 1.b-h google.com:80
#    server 2 example.com:80

#{{with $cfg := file "/var/run/cfgcache/cfgcache.json" | parseJSON}}
#{{range $vhost := $cfg.vhosts}}
#backend {{$vhost.uid}}
#    mode {{$vhost.mode}}
#    balance {{$vhost.balance}}
#    option forwardfor
#    http-request set-header X-Forwarded-Port %[dst_port]
#    http-request add-header X-Forwarded-Proto https if { ssl_fc }
#{{range $bln := $vhost.backendmisc}}    {{$bln}}
#{{end}}
#{{range $appconfig := $vhost.apps}}{{range $task := mesosTaskFrameworkFilter $appconfig.framework $appconfig.task}}
#    {{if $task.Task.Task.Discovery}}{{if $task.Task.Task.Discovery.Ports}}{{if $task.Task.Task.Discovery.Ports.Ports}}{{range $port := $task.Task.Task.Discovery.Ports.Ports}}server {{$task.Agent.Agent.Hostname}}_{{$port.Number}} {{$task.Agent.Agent.Hostname}}:{{$port.Number}}{{end}}{{end}}{{end}}{{end}}
#{{end}}{{end}}{{end}}{{end}}
