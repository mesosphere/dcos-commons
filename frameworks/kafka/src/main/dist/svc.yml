name: {{FRAMEWORK_NAME}}
scheduler:
  principal: {{FRAMEWORK_PRINCIPAL}}
  user: {{FRAMEWORK_USER}}
pods:
  kafka:
    count: {{BROKER_COUNT}}
    placement: {{PLACEMENT_CONSTRAINTS}}
    uris:
      - {{KAFKA_URI}}
      - {{KAFKA_JAVA_URI}}
      - {{BOOTSTRAP_URI}}
      - {{EXECUTOR_URI}}
      - {{LIBMESOS_URI}}
      - {{KAFKA_STATSD_URI}}
      - {{CLIENT_STATSD_URI}}
    {{#ENABLE_VIRTUAL_NETWORK}}
    networks:
      {{VIRTUAL_NETWORK_NAME}}:
        labels: {{VIRTUAL_NETWORK_PLUGIN_LABELS}}
    {{/ENABLE_VIRTUAL_NETWORK}}
    {{#TASKCFG_ALL_SECURITY_KERBEROS_ENABLED}}
    secrets:
      keytab:
        secret: {{SECURITY_KERBEROS_KEYTAB_SECRET}}
        file: kafka.keytab
    {{/TASKCFG_ALL_SECURITY_KERBEROS_ENABLED}}
    tasks:
      broker:
        cpus: {{BROKER_CPUS}}
        memory: {{BROKER_MEM}}
        ports:
          {{^TASKCFG_ALL_KAFKA_ENABLE_TLS}}
          broker:
            port: {{BROKER_PORT}}
            env-key: KAFKA_BROKER_PORT
            advertise: true
            vip:
              prefix: broker
              port: 9092
          {{/TASKCFG_ALL_KAFKA_ENABLE_TLS}}
          {{#TASKCFG_ALL_KAFKA_ENABLE_TLS}}
          {{#TASKCFG_ALL_KAFKA_ALLOW_PLAINTEXT}}
          broker:
            port: {{BROKER_PORT}}
            env-key: KAFKA_BROKER_PORT
            advertise: true
            vip:
              prefix: broker
              port: 9092
          {{/TASKCFG_ALL_KAFKA_ALLOW_PLAINTEXT}}
          broker-tls:
            port: {{BROKER_PORT_TLS}}
            env-key: KAFKA_BROKER_PORT_TLS
            advertise: true
            vip:
              prefix: broker-tls
              port: 9093
          {{/TASKCFG_ALL_KAFKA_ENABLE_TLS}}
        volume:
          path: {{BROKER_DISK_PATH}}
          type: {{BROKER_DISK_TYPE}}
          size: {{BROKER_DISK_SIZE}}
        env:
          KAFKA_DISK_PATH: "{{BROKER_DISK_PATH}}"
          KAFKA_HEAP_OPTS: "-Xms{{BROKER_JAVA_HEAP}}M -Xmx{{BROKER_JAVA_HEAP}}M"
        goal: RUNNING
        cmd: >
          export JAVA_HOME=$(ls -d $MESOS_SANDBOX/jre*/) &&
        {{#TASKCFG_ALL_SECURITY_KERBEROS_ENABLED}}
          export KAFKA_OPTS="-Djava.security.auth.login.config=$MESOS_SANDBOX/{{KAFKA_VERSION_PATH}}/config/kafka_server_jaas.conf -Djava.security.krb5.conf=$MESOS_SANDBOX/{{KAFKA_VERSION_PATH}}/config/krb5.conf -Dsun.security.krb5.debug=true $KAFKA_OPTS" &&
        {{/TASKCFG_ALL_SECURITY_KERBEROS_ENABLED}}

          ./bootstrap -resolve=false &&
          mv -v *statsd*.jar $MESOS_SANDBOX/{{KAFKA_VERSION_PATH}}/libs/ &&
          exec $MESOS_SANDBOX/{{KAFKA_VERSION_PATH}}/bin/kafka-server-start.sh \
               $MESOS_SANDBOX/{{KAFKA_VERSION_PATH}}/config/server.properties
        configs:
          server-properties:
            template: server.properties.mustache
            dest: {{KAFKA_VERSION_PATH}}/config/server.properties
        {{#TASKCFG_ALL_SECURITY_KERBEROS_ENABLED}}
          kafka-server-jaas:
            template: kafka_server_jaas.conf.mustache
            dest: {{KAFKA_VERSION_PATH}}/config/kafka_server_jaas.conf
          krb5-conf:
            template: krb5.conf.mustache
            dest: {{KAFKA_VERSION_PATH}}/config/krb5.conf
        {{/TASKCFG_ALL_SECURITY_KERBEROS_ENABLED}}
        readiness-check:
          cmd: |
            # The broker has started when it logs a specific "started" log line. An example is below:
            # [2017-06-14 22:20:55,464] INFO [Kafka Server 1], started (kafka.server.KafkaServer)
            kafka_dir=$(ls -d kafka_* |head -n 1)
            kafka_server_log_files=${kafka_dir}/logs/server.log*

            echo "Checking for started log line in $kafka_server_log_files."
            grep -q "INFO \[Kafka Server $POD_INSTANCE_INDEX\], started (kafka.server.KafkaServer)" $kafka_server_log_files
            if [ $? -eq 0 ] ; then
              echo "Found started log line."
            else
              echo "started log line not found. Exiting."
              exit 1
            fi
            echo "Required log line found. Broker is ready."
            exit 0
          interval: 5
          delay: 0
          timeout: 10
        {{#TASKCFG_ALL_KAFKA_ENABLE_TLS}}
        transport-encryption:
          - name: broker
            type: KEYSTORE
        {{/TASKCFG_ALL_KAFKA_ENABLE_TLS}}
        kill-grace-period: {{BROKER_KILL_GRACE_PERIOD}}
plans:
  deploy:
    strategy: serial
    phases:
      broker:
        strategy: {{DEPLOY_STRATEGY}}
        pod: kafka
