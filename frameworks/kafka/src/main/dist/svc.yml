name: {{FRAMEWORK_NAME}}
scheduler:
  principal: {{FRAMEWORK_PRINCIPAL}}
  user: {{FRAMEWORK_USER}}
pods:
  kafka:
    count: {{BROKER_COUNT}}
    placement: {{PLACEMENT_CONSTRAINTS}}
    uris:
      - {{KAFKA_URI}}
      - {{KAFKA_JAVA_URI}}
      - {{BOOTSTRAP_URI}}
      - {{EXECUTOR_URI}}
      - {{LIBMESOS_URI}}
      - {{KAFKA_STATSD_URI}}
      - {{CLIENT_STATSD_URI}}
    {{#ENABLE_VIRTUAL_NETWORK}}
    networks:
      {{VIRTUAL_NETWORK_NAME}}:
        labels: {{CNI_PLUGIN_LABELS}}
    {{/ENABLE_VIRTUAL_NETWORK}}
    tasks:
      broker:
        cpus: {{BROKER_CPUS}}
        memory: {{BROKER_MEM}}
        ports:
          broker:
            port: {{BROKER_PORT}}
            env-key: KAFKA_BROKER_PORT
            advertise: true
            vip:
              prefix: broker
              port: 9092
        volume:
          path: {{BROKER_DISK_PATH}}
          type: {{BROKER_DISK_TYPE}}
          size: {{BROKER_DISK_SIZE}}
        env:
          KAFKA_DISK_PATH: "{{BROKER_DISK_PATH}}"
          KAFKA_HEAP_OPTS: "-Xms{{BROKER_JAVA_HEAP}}M -Xmx{{BROKER_JAVA_HEAP}}M"
        goal: RUNNING
        cmd: >
          export JAVA_HOME=$(ls -d $MESOS_SANDBOX/jre*/) &&
          mv -v *statsd*.jar $MESOS_SANDBOX/{{KAFKA_VERSION_PATH}}/libs/ &&
          ./bootstrap -resolve=false &&
          (while sleep 10 ; do echo This is an update if you believe so... ; done)
        configs:
          server-properties:
            template: "{{CONFIG_TEMPLATE_PATH}}/server.properties.mustache"
            dest: "{{KAFKA_VERSION_PATH}}/config/server.properties"
        readiness-check:
          cmd:  exit 0
          interval: 5
          delay: 0
          timeout: 10
plans:
  deploy:
    strategy: serial
    phases:
      Deployment:
        strategy: {{DEPLOY_STRATEGY}}
        pod: kafka
