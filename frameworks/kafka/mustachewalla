reserved.broker.max.id KAFKA_RESERVED_BROKER_MAX_ID={{kafka.reserved.broker.max.id}}
offsets.topic.compression.codec KAFKA_OFFSETS_TOPIC_COMPRESSION_CODEC={{kafka.offsets.topic.compression.codec}}
replica.fetch.min.bytes KAFKA_REPLICA_FETCH_MIN_BYTES={{kafka.replica.fetch.min.bytes}}
controlled.shutdown.retry.backoff.ms KAFKA_CONTROLLED_SHUTDOWN_RETRY_BACKOFF_MS={{kafka.controlled.shutdown.retry.backoff.ms}}
log.flush.offset.checkpoint.interval.ms KAFKA_LOG_FLUSH_OFFSET_CHECKPOINT_INTERVAL_MS={{kafka.log.flush.offset.checkpoint.interval.ms}}
offsets.topic.num.partitions KAFKA_OFFSETS_TOPIC_NUM_PARTITIONS={{kafka.offsets.topic.num.partitions}}
max.connections.per.ip.overrides KAFKA_MAX_CONNECTIONS_PER_IP_OVERRIDES={{kafka.max.connections.per.ip.overrides}}
leader.imbalance.check.interval.seconds KAFKA_LEADER_IMBALANCE_CHECK_INTERVAL_SECONDS={{kafka.leader.imbalance.check.interval.seconds}}
inter.broker.protocol.version KAFKA_INTER_BROKER_PROTOCOL_VERSION={{kafka.inter.broker.protocol.version}}
log.message.format.version KAFKA_LOG_MESSAGE_FORMAT_VERSION={{kafka.log.message.format.version}}
replica.socket.timeout.ms KAFKA_REPLICA_SOCKET_TIMEOUT_MS={{kafka.replica.socket.timeout.ms}}
group.max.session.timeout.ms KAFKA_GROUP_MAX_SESSION_TIMEOUT_MS={{kafka.group.max.session.timeout.ms}}
metrics.num.samples KAFKA_METRICS_NUM_SAMPLES={{kafka.metrics.num.samples}}
log.cleaner.delete.retention.ms KAFKA_LOG_CLEANER_DELETE_RETENTION_MS={{kafka.log.cleaner.delete.retention.ms}}
log.preallocate KAFKA_LOG_PREALLOCATE={{kafka.log.preallocate}}
replica.socket.receive.buffer.bytes KAFKA_REPLICA_SOCKET_RECEIVE_BUFFER_BYTES={{kafka.replica.socket.receive.buffer.bytes}}
offset.metadata.max.bytes KAFKA_OFFSET_METADATA_MAX_BYTES={{kafka.offset.metadata.max.bytes}}
message.max.bytes KAFKA_MESSAGE_MAX_BYTES={{kafka.message.max.bytes}}
log.roll.jitter.hours KAFKA_LOG_ROLL_JITTER_HOURS={{kafka.log.roll.jitter.hours}}
offsets.retention.check.interval.ms KAFKA_OFFSETS_RETENTION_CHECK_INTERVAL_MS={{kafka.offsets.retention.check.interval.ms}}
fetch.purgatory.purge.interval.requests KAFKA_FETCH_PURGATORY_PURGE_INTERVAL_REQUESTS={{kafka.fetch.purgatory.purge.interval.requests}}
log.retention.check.interval.ms KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS={{kafka.log.retention.check.interval.ms}}
log.index.interval.bytes KAFKA_LOG_INDEX_INTERVAL_BYTES={{kafka.log.index.interval.bytes}}
num.network.threads KAFKA_NUM_NETWORK_THREADS={{kafka.num.network.threads}}
offsets.commit.timeout.ms KAFKA_OFFSETS_COMMIT_TIMEOUT_MS={{kafka.offsets.commit.timeout.ms}}
offsets.topic.replication.factor KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR={{kafka.offsets.topic.replication.factor}}
replica.fetch.max.bytes KAFKA_REPLICA_FETCH_MAX_BYTES={{kafka.replica.fetch.max.bytes}}
connections.max.idle.ms KAFKA_CONNECTIONS_MAX_IDLE_MS={{kafka.connections.max.idle.ms}}
socket.request.max.bytes KAFKA_SOCKET_REQUEST_MAX_BYTES={{kafka.socket.request.max.bytes}}
metrics.sample.window.ms KAFKA_METRICS_SAMPLE_WINDOW_MS={{kafka.metrics.sample.window.ms}}
num.partitions KAFKA_NUM_PARTITIONS={{kafka.num.partitions}}
replica.lag.time.max.ms KAFKA_REPLICA_LAG_TIME_MAX_MS={{kafka.replica.lag.time.max.ms}}
log.cleaner.io.buffer.load.factor KAFKA_LOG_CLEANER_IO_BUFFER_LOAD_FACTOR={{kafka.log.cleaner.io.buffer.load.factor}}
offsets.commit.required.acks KAFKA_OFFSETS_COMMIT_REQUIRED_ACKS={{kafka.offsets.commit.required.acks}}
auto.create.topics.enable KAFKA_AUTO_CREATE_TOPICS_ENABLE={{kafka.auto.create.topics.enable}}
unclean.leader.election.enable KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE={{kafka.unclean.leader.election.enable}}
replica.fetch.backoff.ms KAFKA_REPLICA_FETCH_BACKOFF_MS={{kafka.replica.fetch.backoff.ms}}
log.roll.hours KAFKA_LOG_ROLL_HOURS={{kafka.log.roll.hours}}
zookeeper.session.timeout.ms KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS={{kafka.zookeeper.session.timeout.ms}}
producer.purgatory.purge.interval.requests KAFKA_PRODUCER_PURGATORY_PURGE_INTERVAL_REQUESTS={{kafka.producer.purgatory.purge.interval.requests}}
group.min.session.timeout.ms KAFKA_GROUP_MIN_SESSION_TIMEOUT_MS={{kafka.group.min.session.timeout.ms}}
log.index.size.max.bytes KAFKA_LOG_INDEX_SIZE_MAX_BYTES={{kafka.log.index.size.max.bytes}}
num.replica.fetchers KAFKA_NUM_REPLICA_FETCHERS={{kafka.num.replica.fetchers}}
min.insync.replicas KAFKA_MIN_INSYNC_REPLICAS={{kafka.min.insync.replicas}}
log.flush.interval.messages KAFKA_LOG_FLUSH_INTERVAL_MESSAGES={{kafka.log.flush.interval.messages}}
socket.send.buffer.bytes KAFKA_SOCKET_SEND_BUFFER_BYTES={{kafka.socket.send.buffer.bytes}}
auto.leader.rebalance.enable KAFKA_AUTO_LEADER_REBALANCE_ENABLE={{kafka.auto.leader.rebalance.enable}}
log.cleaner.enable KAFKA_LOG_CLEANER_ENABLE={{kafka.log.cleaner.enable}}
queued.max.requests KAFKA_QUEUED_MAX_REQUESTS={{kafka.queued.max.requests}}
controlled.shutdown.max.retries KAFKA_CONTROLLED_SHUTDOWN_MAX_RETRIES={{kafka.controlled.shutdown.max.retries}}
offsets.load.buffer.size KAFKA_OFFSETS_LOAD_BUFFER_SIZE={{kafka.offsets.load.buffer.size}}
log.retention.bytes KAFKA_LOG_RETENTION_BYTES={{kafka.log.retention.bytes}}
num.io.threads KAFKA_NUM_IO_THREADS={{kafka.num.io.threads}}
controller.socket.timeout.ms KAFKA_CONTROLLER_SOCKET_TIMEOUT_MS={{kafka.controller.socket.timeout.ms}}
log.retention.hours KAFKA_LOG_RETENTION_HOURS={{kafka.log.retention.hours}}
log.flush.scheduler.interval.ms KAFKA_LOG_FLUSH_SCHEDULER_INTERVAL_MS={{kafka.log.flush.scheduler.interval.ms}}
offsets.retention.minutes KAFKA_OFFSETS_RETENTION_MINUTES={{kafka.offsets.retention.minutes}}
quota.window.size.seconds KAFKA_QUOTA_WINDOW_SIZE_SECONDS={{kafka.quota.window.size.seconds}}
log.segment.bytes KAFKA_LOG_SEGMENT_BYTES={{kafka.log.segment.bytes}}
leader.imbalance.per.broker.percentage KAFKA_LEADER_IMBALANCE_PER_BROKER_PERCENTAGE={{kafka.leader.imbalance.per.broker.percentage}}
max.connections.per.ip KAFKA_MAX_CONNECTIONS_PER_IP={{kafka.max.connections.per.ip}}
log.cleaner.dedupe.buffer.size KAFKA_LOG_CLEANER_DEDUPE_BUFFER_SIZE={{kafka.log.cleaner.dedupe.buffer.size}}
log.cleaner.min.cleanable.ratio KAFKA_LOG_CLEANER_MIN_CLEANABLE_RATIO={{kafka.log.cleaner.min.cleanable.ratio}}
zookeeper.sync.time.ms KAFKA_ZOOKEEPER_SYNC_TIME_MS={{kafka.zookeeper.sync.time.ms}}
quota.consumer.default KAFKA_QUOTA_CONSUMER_DEFAULT={{kafka.quota.consumer.default}}
delete.topic.enable KAFKA_DELETE_TOPIC_ENABLE={{kafka.delete.topic.enable}}
log.cleanup.policy KAFKA_LOG_CLEANUP_POLICY={{kafka.log.cleanup.policy}}
default.replication.factor KAFKA_DEFAULT_REPLICATION_FACTOR={{kafka.default.replication.factor}}
num.recovery.threads.per.data.dir KAFKA_NUM_RECOVERY_THREADS_PER_DATA_DIR={{kafka.num.recovery.threads.per.data.dir}}
log.cleaner.io.buffer.size KAFKA_LOG_CLEANER_IO_BUFFER_SIZE={{kafka.log.cleaner.io.buffer.size}}
background.threads KAFKA_BACKGROUND_THREADS={{kafka.background.threads}}
log.segment.delete.delay.ms KAFKA_LOG_SEGMENT_DELETE_DELAY_MS={{kafka.log.segment.delete.delay.ms}}
quota.window.num KAFKA_QUOTA_WINDOW_NUM={{kafka.quota.window.num}}
request.timeout.ms KAFKA_REQUEST_TIMEOUT_MS={{kafka.request.timeout.ms}}
log.cleaner.threads KAFKA_LOG_CLEANER_THREADS={{kafka.log.cleaner.threads}}
quota.producer.default KAFKA_QUOTA_PRODUCER_DEFAULT={{kafka.quota.producer.default}}
log.cleaner.backoff.ms KAFKA_LOG_CLEANER_BACKOFF_MS={{kafka.log.cleaner.backoff.ms}}
controlled.shutdown.enable KAFKA_CONTROLLED_SHUTDOWN_ENABLE={{kafka.controlled.shutdown.enable}}
socket.receive.buffer.bytes KAFKA_SOCKET_RECEIVE_BUFFER_BYTES={{kafka.socket.receive.buffer.bytes}}
replica.fetch.wait.max.ms KAFKA_REPLICA_FETCH_WAIT_MAX_MS={{kafka.replica.fetch.wait.max.ms}}
replica.high.watermark.checkpoint.interval.ms KAFKA_REPLICA_HIGH_WATERMARK_CHECKPOINT_INTERVAL_MS={{kafka.replica.high.watermark.checkpoint.interval.ms}}
offsets.topic.segment.bytes KAFKA_OFFSETS_TOPIC_SEGMENT_BYTES={{kafka.offsets.topic.segment.bytes}}
log.cleaner.io.max.bytes.per.second KAFKA_LOG_CLEANER_IO_MAX_BYTES_PER_SECOND={{kafka.log.cleaner.io.max.bytes.per.second}}
compression.type KAFKA_COMPRESSION_TYPE={{kafka.compression.type}}
