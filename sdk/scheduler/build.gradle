// Config specific to the dcos-commons library:
apply plugin: 'application'

ext {
    antlrVer = "4.5.1-1"
    commonsCollectionsVer = "3.2.2"
    commonsIoVer = "2.4"
    curatorVer = "2.9.1"
    dropwizardVer = "0.9.2"
    findbugsAnnotationsVer = "3.0.1u2"
    guiceVer = "3.0"
    hamcrestVer = "1.3"
    jacksonVer = "2.6.3"
    jacksonProtobufVer = "0.9.3"
    junitVer = "4.12"
    slf4jVer = "1.7.10"
    jsonVer = "20160212"
    protobufFormatVer = "1.4"
    mockitoVer = "1.9.5"
    restServiceVer = "2.0.1"
    slf4jVer = "1.7.10"
    systemRulesVer = "1.16.0"
    mockServerVer = "3.10.4"
    springVer = "4.3.1.RELEASE"
    httpClientVer = "4.5.2"
    awaitilityVer = "2.0.0"
    javaDiffUtilsVer = "1.3.0"
    jettyServletVer = "9.2.3.v20140905"
    jerseyVer = "2.23.2";
    jsonProviderVer = "2.2.3"
    mustacheVer = "0.9.2"
    hibernateValidatorVer = "5.3.2.Final"
    elVer = "2.2.4"
    jwtVer = "3.2.0"
    bouncyCastleVer = "1.57"
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

publishing {
    repositories {
        maven {
            if(project.version.endsWith('-SNAPSHOT')) {
                url "s3://downloads.mesosphere.io/maven-snapshot/"
            } else {
                url "s3://downloads.mesosphere.io/maven/"
            }
            credentials(AwsCredentials) {
                accessKey System.env['AWS_ACCESS_KEY_ID']
                secretKey System.env['AWS_SECRET_ACCESS_KEY']
            }
        }
        publications {
            mavenJava(MavenPublication) {
                groupId project.group
                artifactId 'scheduler'
                version project.version

                from components.java

                artifact sourceJar {
                    classifier "sources"
                }
            }
        }
    }
}

configurations {
    runtime.exclude group: "org.slf4j", module: "slf4j-log4j12"
}

dependencies {
    compile project(":common")
    compile "com.fasterxml.jackson.datatype:jackson-datatype-guava:${jacksonVer}"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${jacksonVer}"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVer}"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonVer}"
    compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVer}"
    compile "com.hubspot.jackson:jackson-datatype-protobuf:${jacksonProtobufVer}"
    compile "com.google.code.findbugs:annotations:${findbugsAnnotationsVer}"
    compile "commons-collections:commons-collections:${commonsCollectionsVer}"
    compile "commons-io:commons-io:${commonsIoVer}"
    compile "org.antlr:antlr4-runtime:${antlrVer}"
    compile "javax.ws.rs:javax.ws.rs-api:${restServiceVer}"
    compile "org.apache.curator:curator-framework:${curatorVer}"
    compile "org.apache.curator:curator-recipes:${curatorVer}"
    compile "org.apache.curator:curator-test:${curatorVer}"
    compile "org.apache.httpcomponents:httpclient:${httpClientVer}"
    compile "org.apache.httpcomponents:fluent-hc:${httpClientVer}"
    compile "org.apache.commons:commons-lang3:3.4"
    compile "com.googlecode.protobuf-java-format:protobuf-java-format:${protobufFormatVer}"
    compile "org.json:json:${jsonVer}"
    compile "com.google.inject:guice:${guiceVer}"
    compile "com.google.inject.extensions:guice-assistedinject:${guiceVer}"
    compile "com.googlecode.java-diff-utils:diffutils:${javaDiffUtilsVer}"
    compile "org.glassfish.jersey.containers:jersey-container-jetty-http:${jerseyVer}"
    compile "org.glassfish.jersey.media:jersey-media-json-jackson:${jerseyVer}"
    compile "org.eclipse.jetty:jetty-servlet:${jettyServletVer}"
    compile "com.github.spullara.mustache.java:compiler:${mustacheVer}"
    compile "org.hibernate:hibernate-validator:${hibernateValidatorVer}"
    compile "javax.el:javax.el-api:${elVer}"
    compile "org.glassfish.web:javax.el:${elVer}"
    compile 'com.mesosphere:mesos-http-adapter:0.4.1'
    compile("com.auth0:java-jwt:${jwtVer}") {
        // JWT package comes with jackson version 2.8.4 which doesn't work properly with
        // scheduler specification classes.
        exclude group: "com.fasterxml.jackson.core", module: "jackson-databind"
    }
    compile "org.bouncycastle:bcprov-jdk15on:${bouncyCastleVer}"
    compile "org.bouncycastle:bcpkix-jdk15on:${bouncyCastleVer}"
    testCompile "org.hamcrest:hamcrest-all:${hamcrestVer}" // note: must be above junit
    testCompile "junit:junit:${junitVer}"
    testCompile "com.github.stefanbirkner:system-rules:${systemRulesVer}"
    testCompile "io.dropwizard:dropwizard-testing:${dropwizardVer}"
    testCompile "org.mockito:mockito-all:${mockitoVer}"
    testCompile "org.mock-server:mockserver-netty:${mockServerVer}"
    testCompile "org.springframework.integration:spring-integration-http:${springVer}"
    testCompile "org.awaitility:awaitility:${awaitilityVer}"
}

distributions {
    main {
        mainClassName = ''
        baseName = 'sdk'
    }
}

check.finalizedBy jacocoTestReport

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}
