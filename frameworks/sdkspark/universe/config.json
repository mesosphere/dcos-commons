{
  "type": "object",
    "properties": {
      "service": {
        "type": "object",
        "description": "DC/OS service configuration properties",
        "properties": {
          "name": {
            "title": "Service name",
            "description": "The name of the service instance",
            "type": "string",
            "default": "sdkspark"
          },
          "sleep": {
            "description": "The sleep duration in seconds before tasks exit.",
            "type": "number",
            "default":1000
          },
          "user": {
            "title": "User",
            "description": "The user that the service will run as.",
            "type": "string",
            "default": "root"
          },
          "service_account": {
            "description": "The service account for DC/OS service authentication. This is typically left empty to use the default unless service authentication is needed. The value given here is passed as the principal of Mesos framework.",
            "type": "string",
            "default": ""
          },
          "virtual_network_enabled": {
            "description": "Enable virtual networking",
            "type": "boolean",
            "default": false
          },
          "virtual_network_name": {
            "description": "The name of the virtual network to join",
            "type": "string",
            "default": "dcos"
          },
          "virtual_network_plugin_labels": {
            "description": "Labels to pass to the virtual network plugin. Comma-separated key:value pairs. For example: k_0:v_0,k_1:v_1,...,k_n:v_n",
            "type": "string",
            "default": ""
          },
          "service_account_secret": {
            "title": "Credential secret name (optional)",
            "description": "Name of the Secret Store credentials to use for DC/OS service authentication. This should be left empty unless service authentication is needed.",
            "type": "string",
            "default": ""
          },
          "log_level": {
            "description": "The log level for the DC/OS service.",
            "type": "string",
            "enum": ["OFF", "FATAL", "ERROR", "WARN", "INFO", "DEBUG", "TRACE", "ALL"],
            "default": "INFO"
          },
          "main_class": {
            "title": "Main class to run",
            "description": "(REQUIRED) Main class to run in you Spark application",
            "type": "string",
            "default": "org.apache.spark.examples.SparkPi"
          },
          "spark_app_url": {
            "title": "Spark application URL",
            "description": "(REQUIRED) Main class to run in you Spark application",
            "type": "string",
            "default": "https://s3-us-west-2.amazonaws.com/arand-sandbox-mesosphere/spark-examples_2.11-2.3.0-SNAPSHOT.jar"
          },
          "application_args": {
            "title": "Arguments to pass to your Spark application",
            "description": "Free form string of arguments",
            "type": "string",
            "default": "100"
          },
          "eventlog_enabled": {
            "description": "Enable event logging",
            "type": "boolean",
            "default": false
          },
          "eventlog_dir": {
            "description": "Event logging directory",
            "type": "string",
            "default": "hdfs://hdfs/history"
          }
        },
        "required":[
          "name",
          "sleep",
          "user",
          "main_class",
          "spark_app_url"
        ]
      },
      "executor": {
        "description": "Template pod configuration properties",
        "type": "object",
        "properties": {
          "count": {
            "title": "Node count",
            "description": "Number of Template pods to run",
            "type": "integer",
            "default":3
          },
          "placement_constraint": {
            "title": "Placement constraint",
            "description": "Marathon-style placement constraint for nodes. Example: 'hostname:UNIQUE'",
            "type": "string",
            "default": ""
          },
          "cores": {
            "title": "CPU count",
            "description": "Template pod CPU requirements",
            "type": "number",
            "default":2
          },
          "mem": {
            "title": "Memory size (MB)",
            "description": "Template pod mem requirements (in MB)",
            "type": "integer",
            "default":1000
          },
          "disk": {
            "title": "Disk size (MB)",
            "description": "Template pod persistent disk requirements (in MB)",
            "type": "integer",
            "default":25
          },
          "disk_type": {
            "title": "Disk type [ROOT, MOUNT]",
            "description": "Mount volumes require preconfiguration in DC/OS",
            "enum": [
              "ROOT",
              "MOUNT"
            ],
            "default": "ROOT"
          }
        },
        "required":[
          "count",
          "cores",
          "mem",
          "disk",
          "disk_type"
        ]
      },
      "coordinator": {
        "description": "Template pod configuration properties",
        "type": "object",
        "properties": {
          "placement_constraint": {
            "title": "Placement constraint",
            "description": "Marathon-style placement constraint for nodes. Example: 'hostname:UNIQUE'",
            "type": "string",
            "default": ""
          },
          "cores": {
            "title": "CPU count",
            "description": "Template pod CPU requirements",
            "type": "number",
            "default":1
          },
          "mem": {
            "title": "Memory size (MB)",
            "description": "Template pod mem requirements (in MB)",
            "type": "integer",
            "default":1000
          },
          "disk": {
            "title": "Disk size (MB)",
            "description": "Template pod persistent disk requirements (in MB)",
            "type": "integer",
            "default":25
          },
          "disk_type": {
            "title": "Disk type [ROOT, MOUNT]",
            "description": "Mount volumes require preconfiguration in DC/OS",
            "enum": [
              "ROOT",
              "MOUNT"
            ],
            "default": "ROOT"
          }
        },
        "required":[
          "cores",
          "mem",
          "disk",
          "disk_type"
        ]
      },
      "hdfs": {
        "description": "Spark-HDFS configuration properties",
        "type": "object",
        "properties": {
          "config-url": {
            "type": "string",
            "description": "Base URL that serves HDFS config files (hdfs-site.xml, core-site.xml)."
          }
        }
      }
    }
}
