{
  "type": "object",
  "properties": {
    "service": {
      "type": "object",
      "description": "DC/OS service configuration properties",
      "properties": {
        "name": {
          "description": "The name of the Elasticsearch service instance",
          "type": "string",
          "default": "elastic"
        },
        "service_account_secret": {
          "description": "Name of the Secret Store credentials to use for DC/OS service authentication. This should be left empty unless service authentication is needed.",
          "type": "string",
          "default": ""
        },
        "user": {
          "description": "The user that runs the Elasticsearch services and owns the Mesos sandbox.",
          "type": "string",
          "default": "nobody"
        },
        "service_account": {
          "description": "The service account for DC/OS service authentication. This is typically left empty to use the default unless service authentication is needed. The value given here is passed as the principal of Mesos framework.",
          "type": "string",
          "default": ""
        },
        "virtual_network_enabled": {
          "description": "Enable virtual networking",
          "type": "boolean",
          "default": false
        },
        "virtual_network_name": {
          "description": "The name of the virtual network to join",
          "type": "string",
          "default": "dcos"
        },
        "virtual_network_plugin_labels": {
          "description": "Labels to pass to the virtual network plugin. Comma-separated key:value pairs. For example: k_0:v_0,k_1:v_1,...,k_n:v_n",
          "type": "string",
          "default": ""
        },
        "deploy_strategy": {
          "description": "Elasticsearch deploy strategy. [parallel, serial]",
          "type": "string",
          "default": "parallel",
          "enum" : ["parallel", "serial"]
        },
        "mesos_api_version": {
          "description": "Configures the Mesos API version to use. Possible values: V0 (non-HTTP), V1 (HTTP)",
          "type": "string",
          "default": "V0"
        },
        "tls": {
          "description": "Enable TLS support (requires Enterprise DC/OS running in strict or permissive security mode).",
          "type": "boolean",
          "default": false
        },
        "log_level": {
          "description": "The log level for the DC/OS service.",
          "type": "string",
          "enum": ["OFF", "FATAL", "ERROR", "WARN", "INFO", "DEBUG", "TRACE", "ALL"],
          "default": "INFO"
        }
      },
      "required": [
        "name",
        "user",
        "deploy_strategy"
      ]
    },
    "master_nodes": {
      "description": "Configuration properties for the three (3) Elasticsearch master nodes",
      "type": "object",
      "properties": {
        "cpus": {
          "description": "Node cpu requirements",
          "type": "number",
          "default": 1.0
        },
        "mem": {
          "description": "Node mem requirements",
          "type": "integer",
          "default": 2048
        },
        "heap": {
          "description": "The Elasticsearch process JVM heap configuration object",
          "type": "object",
          "properties": {
            "size": {
              "type": "integer",
              "description": "The amount of JVM heap, in MB, allocated to the Elasticsearch node process.",
              "default": 1024
            }
          },
          "additionalProperties": false,
          "required": [
            "size"
          ]
        },
        "disk": {
          "description": "Node disk requirements (only respected with persistent volumes)",
          "type": "integer",
          "default": 2000
        },
        "disk_type": {
          "type": "string",
          "description": "Disk type to be used for storing data. [ROOT, MOUNT]",
          "default": "ROOT"
        },
        "transport_port": {
          "description": "Transport port for master nodes to listen on.",
          "type": "integer",
          "default": 9300
        },
        "placement": {
          "description": "Marathon-style placement constraints (e.g., hostname:UNIQUE).",
          "type": "string",
          "default": ""
        }
      },
      "required": [
        "cpus",
        "mem",
        "disk",
        "transport_port"
      ]
    },
    "data_nodes": {
      "description": "Elasticsearch data node configuration properties",
      "type": "object",
      "properties": {
        "count": {
          "description": "Number of data nodes to run",
          "type": "integer",
          "default": 2,
          "minimum": 1
        },
        "cpus": {
          "description": "Node cpu requirements",
          "type": "number",
          "default": 1.0
        },
        "mem": {
          "description": "Node mem requirements",
          "type": "integer",
          "default": 4096
        },
        "heap": {
          "description": "The Elasticsearch process JVM heap configuration object",
          "type": "object",
          "properties": {
            "size": {
              "type": "integer",
              "description": "The amount of JVM heap, in MB, allocated to the Elasticsearch node process.",
              "default": 2048
            }
          },
          "additionalProperties": false,
          "required": [
            "size"
          ]
        },
        "disk": {
          "description": "Node disk requirements (only respected with persistent volumes)",
          "type": "integer",
          "default": 10000
        },
        "disk_type": {
          "type": "string",
          "description": "Disk type to be used for storing data. [ROOT, MOUNT]",
          "default": "ROOT"
        },
        "placement": {
          "description": "Marathon-style placement constraints (e.g., hostname:UNIQUE).",
          "type": "string",
          "default": ""
        }
      },
      "required": [
        "cpus",
        "mem",
        "disk",
        "count"
      ]
    },
    "ingest_nodes": {
      "description": "Elasticsearch ingest node configuration properties",
      "type": "object",
      "properties": {
        "count": {
          "description": "Number of ingest nodes to run",
          "type": "integer",
          "default": 0,
          "minimum": 0
        },
        "cpus": {
          "description": "Node cpu requirements",
          "type": "number",
          "default": 0.5
        },
        "mem": {
          "description": "Node mem requirements",
          "type": "integer",
          "default": 2048
        },
        "heap": {
          "description": "The Elasticsearch process JVM heap configuration object",
          "type": "object",
          "properties": {
            "size": {
              "type": "integer",
              "description": "The amount of JVM heap, in MB, allocated to the Elasticsearch node process.",
              "default": 512
            }
          },
          "additionalProperties": false,
          "required": [
            "size"
          ]
        },
        "disk": {
          "description": "Node disk requirements (only respected with persistent volumes)",
          "type": "integer",
          "default": 2000
        },
        "disk_type": {
          "type": "string",
          "description": "Disk type to be used for storing data. [ROOT, MOUNT]",
          "default": "ROOT"
        },
        "placement": {
          "description": "Marathon-style placement constraints (e.g., hostname:UNIQUE).",
          "type": "string",
          "default": ""
        }
      },
      "required": [
        "cpus",
        "mem",
        "disk",
        "count"
      ]
    },
    "coordinator_nodes": {
      "description": "Elasticsearch coordinator node configuration properties",
      "type": "object",
      "properties": {
        "count": {
          "description": "Number of coordinator nodes to run",
          "type": "integer",
          "default": 1,
          "minimum": 0
        },
        "cpus": {
          "description": "Node cpu requirements",
          "type": "number",
          "default": 1.0
        },
        "mem": {
          "description": "Node mem requirements",
          "type": "integer",
          "default": 2048
        },
        "heap": {
          "description": "The Elasticsearch process JVM heap configuration object",
          "type": "object",
          "properties": {
            "size": {
              "type": "integer",
              "description": "The amount of JVM heap, in MB, allocated to the Elasticsearch node process.",
              "default": 1024
            }
          },
          "additionalProperties": false,
          "required": [
            "size"
          ]
        },
        "disk": {
          "description": "Node disk requirements (only respected with persistent volumes)",
          "type": "integer",
          "default": 1000
        },
        "disk_type": {
          "type": "string",
          "description": "Disk type to be used for storing data. [ROOT, MOUNT]",
          "default": "ROOT"
        },
        "placement": {
          "description": "Marathon-style placement constraints (e.g., hostname:UNIQUE).",
          "type": "string",
          "default": ""
        }
      },
      "required": [
        "cpus",
        "mem",
        "disk",
        "count"
      ]
    },    
    "elasticsearch": {
      "description": "Elasticsearch service configuration properties",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "xpack_enabled": {
          "description": "Whether or not to enable the commercial X-Pack plugin from Elastic",
          "type": "boolean",
          "default": false
        },
        "plugins": {
          "description": "Comma-separated list of plugins to install",
          "type": "string",
          "default": ""
        },
        "health_user": {
          "description": "Elastic username to use for X-Pack authentication, if enabled",
          "type": "string",
          "default": "elastic"
        },
        "health_user_password": {
          "description": "Password to use with health_user for X-Pack authentication, if enabled. Note that you are not setting the password here. You are telling the framework the credentials to use when sending in health check requests.",
          "type": "string",
          "default": "changeme"
        },
        "gateway_recover_after_time": {
          "description": "If the expected number of nodes is not achieved, the recovery process waits for the configured amount of time before trying to recover regardless. Defaults to 5m if one of the expected_nodes settings is configured.",
          "type": "string",
          "default": "5m"
        },
        "network_tcp_no_delay": {
          "description": "Enable or disable the TCP no delay setting. Defaults to true.",
          "type": "boolean",
          "default": true
        },
        "network_tcp_keep_alive": {
          "description": "Enable or disable TCP keep alive. Defaults to true.",
          "type": "boolean",
          "default": true
        },
        "network_tcp_reuse_address": {
          "description": "Should an address be reused or not. Defaults to true.",
          "type": "boolean",
          "default": true
        },
        "network_tcp_send_buffer_size": {
          "description": "The size of the TCP send buffer (specified with size units). By default not explicitly set.",
          "type": "string",
          "default": ""  
        },
        "network_tcp_receive_buffer_size": {
          "description": "The size of the TCP receive buffer (specified with size units). By default not explicitly set.",
          "type": "string",
          "default": ""  
        },
        "transport_tcp_connect_timeout": {
          "description": "The socket connect timeout setting (in time setting format). Defaults to 30s.",
          "type": "string",
          "default": "30s"
        },
        "transport_tcp_compress": {
          "description": "Set to true to enable compression (LZF) between all nodes. Defaults to false.",
          "type": "boolean",
          "default": false
        },
        "transport_ping_schedule": {
          "description": "Schedule a regular ping message to ensure that connections are kept alive. Defaults to 5s in the transport client and -1 (disabled) elsewhere.",
          "type": "string",
          "default": "-1"
        },
        "http_enabled": {
          "description": "The http module can be completely disabled and not started by setting http.enabled to false. Default is true.",
          "type": "boolean",
          "default": true
        },
         "http_max_content_length": {
          "description": "The max content of an HTTP request. Defaults to 100mb. If set to greater than Integer.MAX_VALUE, it will be reset to 100mb.",
          "type": "string",
          "default": "100mb"
        },
         "http_max_initial_line_length": {
          "description": "The max length of an HTTP URL. Defaults to 4kb.",
          "type": "string",
          "default": "4kb"
        },
         "http_max_header_size": {
          "description": "The max size of allowed headers. Defaults to 8kB.",
          "type": "string",
          "default": "8kB"
        },
         "http_compression": {
          "description": "Support for compression when possible (with Accept-Encoding). Defaults to true.",
          "type": "boolean",
          "default": true
        },          
         "http_compression_level": {
          "description": "Defines the compression level to use for HTTP responses. Valid values are in the range of 1 (minimum compression) and 9 (maximum compression). Defaults to 3.",
          "type": "integer",
          "default": 3
        },
          "http_cors_enabled": {
          "description": "Enable or disable cross-origin resource sharing, i.e. whether a browser on another origin can execute requests against Elasticsearch. Set to true to enable Elasticsearch to process pre-flight CORS requests.",
          "type": "boolean",
          "default": true
        },
          "http_cors_max_age": {
          "description": "Browsers send a \"preflight\" OPTIONS-request to determine CORS settings. Defines how long the result should be cached for. Defaults to 1728000 (20 days)",
          "type": "integer",
          "default": 1728000
        },
        "http_cors_allow_credentials": {
          "description": "Whether the Access-Control-Allow-Credentials header should be returned. Note: This header is only returned when the setting is set to true. Defaults to false.",
          "type": "boolean",
          "default": false
        },
        "http_detailed_errors_enabled": {
          "description": "Enables or disables the output of detailed error messages and stack traces in response output. Note: When set to false and the error_trace request parameter is specified, an error will be returned; when error_trace is not specified, a simple message will be returned. Defaults to true.",
          "type": "boolean",
          "default": true
        },
        "http_pipelining": {
          "description": "Enable or disable HTTP pipelining, defaults to true.",
          "type": "boolean",
          "default": true
        },  
        "http_pipelining_max_events": {
          "description": "The maximum number of events to be queued up in memory before a HTTP connection is closed, defaults to 10000.",
          "type": "integer",
          "default":  10000
        },
        "http_content_type_required": {
          "description": "Enables or disables strict checking and usage of the Content-Type header for all requests with content, defaults to false.",
          "type": "boolean",
          "default": true
        }
      }
    }
  }
}
